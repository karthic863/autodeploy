pipeline {
  environment {
    registry = "karthickkb0025/sts-test"
    registryCredential = 'docker-hub-credentials'
    dockerImage = ''
  }
  agent any
  stages {
    stage('Compile') {
      steps {
        /* git 'https://github.com/karthic863/autodeploy.git'*/
       
        script{
                sh 'mvn -f spring-tool-suit/pom.xml clean install'
               /* def mvnHome = tool name: 'MAVEN_HOME', type: 'maven'
                sh "${mvnHome}/bin/mvn package" */
        }
      }
    }
    stage('Building Docker Image') {
      steps{
        script {
          /*dockerImage = docker.build registry + ":$BUILD_NUMBER"*/
            dockerImage = docker.build(registry + ":$BUILD_NUMBER", "-f spring-tool-suit/Dockerfile.yml spring-tool-suit")
        }
      }
    }
    stage('Push Docker Image To Docker Hub') {
      steps{
        script {
          /* Finally, we'll push the image with two tags:
                   * First, the incremental build number from Jenkins
                   * Second, the 'latest' tag.
                   * Pushing multiple tags is cheap, as all the layers are reused. */
          docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
              dockerImage.push("${env.BUILD_NUMBER}")
              dockerImage.push("latest")
          }
        }
      }
    }
    stage('Deploy to Kubernetes'){
        steps{
           withKubeConfig([credentialsId: 'KubeAdminConfig', serverUrl: 'http://127.0.0.1:39173']) {
               sh 'kubectl apply -f spring-tool-suit/deployment.yml'
         }
       }
    }
  }
}
